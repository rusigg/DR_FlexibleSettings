<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Входящий ORDER</Value>
		<Value xsi:type="xs:string">//ВыполнитьГибкиеНастройки(Приемник,,, ЛогСобытий); 

// Новый вариант для использования при создании ЭКОМ_Документа
Если Приемник.xmlВалюта = "UAH" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(980);
ИначеЕсли Приемник.xmlВалюта = "RUB" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(643);
ИначеЕсли Приемник.xmlВалюта = "USD" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(840);
ИначеЕсли Приемник.xmlВалюта = "EUR" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(978);
ИначеЕсли Приемник.xmlВалюта = "MDL" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(498);
ИначеЕсли Приемник.xmlВалюта = "BYR" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(974);
ИначеЕсли Приемник.xmlВалюта = "KZT" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(398);
Иначе
    Валюта = Справочники.Валюты.НайтиПоКоду(643);
КонецЕсли;

Приемник.Валюта = Валюта;

Если ВРег(Приемник.ТипДокумента) = "D" Тогда

    Если ЗначениеЗаполнено(Приемник.Документ1С) И ТипЗнч(Приемник.Документ1С) = Тип("ДокументСсылка.ЗаказКлиента")
        И НЕ Приемник.Документ1С.Проведен Тогда

        ЗаказОбъект = Приемник.Документ1С.ПолучитьОбъект();
        ЗаказОбъект.УстановитьПометкуУдаления(Истина);
    КонецЕсли;

Иначе

	ПерезаписыватьЗаказ = Настройка_Параметр_Прочитать("ЭКОМ_ПерезаписыватьЗаказ", Ложь);    
	Если Приемник.АктуальныйДокумент И Приемник.НеЗагружатьДокумент = Ложь И ПерезаписыватьЗаказ Тогда    
		//получение ссылки на текущий документ Заказ
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ВложенныйЗапрос_Заказ.Документ КАК Заказ,
		|	ВложенныйЗапрос_Накладная.Документ КАК Документ
		|ИЗ
		|	(ВЫБРАТЬ
		|		DR_События.Документ КАК Документ
		|	ИЗ
		|		РегистрСведений.DR_События КАК DR_События
		|	ГДЕ
		|		DR_События.ИдентификаторЦепочки = &amp;ИдентификаторЦепочки
		|		И DR_События.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭКОМ_ВидыДокументов.Заказ_Входящий)) КАК ВложенныйЗапрос_Заказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			DR_События.Документ КАК Документ
		|		ИЗ
		|			РегистрСведений.DR_События КАК DR_События
		|		ГДЕ
		|			DR_События.ИдентификаторЦепочки = &amp;ИдентификаторЦепочки
		|			И DR_События.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭКОМ_ВидыДокументов.Накладная_Исходящая)) КАК ВложенныйЗапрос_Накладная
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВложенныйЗапрос_Накладная.Документ ЕСТЬ NULL";
		Запрос.УстановитьПараметр("ИдентификаторЦепочки", Приемник.ИдентификаторЦепочки);
		
		ЗаказОбъект = Неопределено; 
		Выборка     = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 1 И Выборка.Следующий() Тогда
			ЗаказОбъект = Выборка.Заказ.ПолучитьОбъект();   	
		КонецЕсли;  
		
		Если Не ЗаказОбъект = Неопределено Тогда  		
			// получение гибких настроек создания заказа
			ИмяКолонки = "";
			СтруктураФайлаДанных = Неопределено;
			
			ШаблоныСозданияДокументов = Настройка_Параметр_Прочитать("СтруктураФайлаXMLДокументы");
			СтрокиНастроекПоОтбору	  = ШаблоныСозданияДокументов.Строки.НайтиСтроки(Новый Структура("Использовать, Кнопка", Истина, "Создать заказ клиента"));
			Если СтрокиНастроекПоОтбору.Количество() Тогда
				// используется первый найденный шаблон с признаком "Использовать"
				СтруктураФайлаДанных = СтрокиНастроекПоОтбору[0];
				
				ЕстьКолонка = НЕ СтруктураФайлаДанных.Владелец().Колонки.Найти("КолонкаИсточника") = Неопределено;
				Если ЕстьКолонка Тогда
					ИмяКолонки = СтруктураФайлаДанных.КолонкаИсточника;
				КонецЕсли;			
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтруктураФайлаДанных) Тогда
				// предварительная запись документа, для использования в запросах шаблона создания заказа
				Приемник.НеВыполнятьКодПриЗаписи = Истина;
				Приемник.Записать();    		
				Приемник.НеВыполнятьКодПриЗаписи = Ложь;
				
				// переменные используемые в шаблоне создания заказа клиента
				Источник = Приемник.Ссылка;
				Цепочка  = Новый Структура("ДокументЗаказа1С, ДокументРеализации", ЗаказОбъект.Ссылка, Документы.РеализацияТоваровУслуг.ПустаяСсылка());
				КэшированныеЗначенияЗаказ = Неопределено;
				
				// изменение имени переменной Приемник для исключения пересечений наименований текущего шаблона и вложенного 
				ГибкиеНастройки = СтрЗаменить(СтруктураФайлаДанных.Служебные, "Приемник", "ЗаказОбъект"); 
				ГибкиеНастройки = СтрЗаменить(ГибкиеНастройки, "КэшированныеЗначения", "КэшированныеЗначенияЗаказ"); 
				// переменная для работы вызываемого шаблона по алгоритму предназначенному для сценария вызова из входящего ORDER
				ГибкиеНастройки = "ВызовВходящимORDER = Истина;" + Символы.ПС + ГибкиеНастройки; 	// выполнение подготовленного шаблона
				// выполнение подготовленного шаблона
				Выполнить(ГибкиеНастройки); 

				// запись актуального объекта ORDER, тк в шаблоне создания Заказа над объектом могли выполняться операции
				Приемник = Приемник.Ссылка.ПолучитьОбъект();				
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
КонецЕсли;

Если Приемник.НеЗагружатьДокумент = Ложь Тогда
	Приемник.Проведен = Истина;
	Приемник.ПометкаУдаления = Ложь;
КонецЕсли;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Заказы покупателей (ORDER)</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">3</lastId>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Заказы покупателей (ORDER)</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">ЭТРН</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">4</id>
			</item>
		</Value>
	</row>
</ValueTree>