<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Входящий DESADV</Value>
		<Value xsi:type="xs:string">// Ищем валюту документа   
Если Приемник.xmlВалюта = "UAH" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(980);
ИначеЕсли Приемник.xmlВалюта = "RUB" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(643);
ИначеЕсли Приемник.xmlВалюта = "USD" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(840);
ИначеЕсли Приемник.xmlВалюта = "EUR" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(978);
ИначеЕсли Приемник.xmlВалюта = "MDL" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(498);
ИначеЕсли Приемник.xmlВалюта = "BYR" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(974);
ИначеЕсли Приемник.xmlВалюта = "KZT" Тогда
    Валюта = Справочники.Валюты.НайтиПоКоду(398);
Иначе
    Валюта = Справочники.Валюты.НайтиПоКоду(643);
КонецЕсли;
Приемник.Валюта = Валюта;

ПометитьНаУдаление = Ложь;
ТекстКомментария   = "";

// Проверяем на заполненность табличную часть
ТабличнаяЧастьЗаполнена = Истина;
Для Каждого Стр Из Приемник.ТЧ_Товары Цикл
    Если НЕ ЗначениеЗаполнено(Стр.Номенклатура) Тогда
        ТабличнаяЧастьЗаполнена = Ложь;
        Прервать;
    Иначе
        // Сравниваем единицы измерения
        Если ЗначениеЗаполнено(Стр.ЕдиницаИзмерения)
            И НЕ СокрЛП(Стр.ЕдиницаИзмерения.МеждународноеСокращение) = СокрЛП(Стр.xmlЕдиницаИзмерения) Тогда
            ТекстКомментария = ТекстКомментария + ?(ЗначениеЗаполнено(ТекстКомментария), Символы.ПС, "")
            + "По штрихкоду " + Стр.НомерПродукта + " ед. измерения из заказа - " + Стр.ЕдиницаИзмерения.МеждународноеСокращение 
            + " не соответсвует ед. измерения XML документа - " + Стр.xmlЕдиницаИзмерения;

            ПометитьНаУдаление = Истина;
        КонецЕсли;     
    КонецЕсли;
КонецЦикла;

// Заполняем табличную часть, если не заполнено
Если ТабличнаяЧастьЗаполнена = Ложь Тогда    
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	ТЧ_Товары.НомерПродукта КАК НомерПродукта,
		|	ТЧ_Товары.xmlЕдиницаИзмерения КАК xmlЕдиницаИзмерения
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	&amp;ТЧ_Товары КАК ТЧ_Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.НомерПродукта КАК НомерПродукта,
		|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
		|	ШтрихкодыНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияСсылка,
		|	ШтрихкодыНоменклатуры.Номенклатура.ЕдиницаИзмерения.МеждународноеСокращение КАК текстЕдиницаИзмерения1С,
		|	вт.xmlЕдиницаИзмерения КАК xmlЕдиницаИзмерения
		|ИЗ
		|	вт КАК вт
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|		ПО вт.НомерПродукта = ШтрихкодыНоменклатуры.Штрихкод";
	Запрос.УстановитьПараметр("ТЧ_Товары", Приемник.ТЧ_Товары.Выгрузить(,"НомерПродукта, xmlЕдиницаИзмерения"));

    Результат = Запрос.Выполнить();
    ТЗ = Результат.Выгрузить();
    ТЗ.Индексы.Добавить("НомерПродукта");    
    Для Каждого Стр Из Приемник.ТЧ_Товары Цикл
        НайденнаяСтрока = ТЗ.Найти(Стр.НомерПродукта, "НомерПродукта");    
        Если НЕ НайденнаяСтрока = Неопределено Тогда  
            Стр.Номенклатура     = НайденнаяСтрока.Номенклатура;
            Стр.ЕдиницаИзмерения = НайденнаяСтрока.ЕдиницаИзмеренияСсылка;
            // Сравниваем единицы измерения
            Если НЕ СокрЛП(НайденнаяСтрока.текстЕдиницаИзмерения1С) = СокрЛП(НайденнаяСтрока.xmlЕдиницаИзмерения) Тогда
                ТекстКомментария = ТекстКомментария + ?(ЗначениеЗаполнено(ТекстКомментария), Символы.ПС, "")
                + "По штрихкоду " + НайденнаяСтрока.НомерПродукта + " ед. измерения из заказа - " + НайденнаяСтрока.текстЕдиницаИзмерения1С 
                + " не соответсвует ед. измерения XML документа - " + НайденнаяСтрока.xmlЕдиницаИзмерения;

                ПометитьНаУдаление = Истина;
            КонецЕсли;
        КонецЕсли;          
    КонецЦикла;    
КонецЕсли;

//Сначала ищем существующий документ поступления
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка
|ИЗ
|	Документ.ПриобретениеТоваровУслуг КАК ПоступлениеТоваровУслуг
|ГДЕ
|	ПоступлениеТоваровУслуг.НомерВходящегоДокумента = &amp;ФайлНомер
|	И ПоступлениеТоваровУслуг.ДатаВходящегоДокумента = &amp;ФайлДата";
Запрос.УстановитьПараметр("ФайлНомер", Приемник.ФайлНомер);
Запрос.УстановитьПараметр("ФайлДата", Приемник.ФайлДата);
Результат = Запрос.Выполнить();
Если НЕ Результат.Пустой() Тогда
    Выборка = Результат.Выбрать();
    Выборка.Следующий();

    Приемник.ДокументыСвязанные.Очистить();
    Нов = Приемник.ДокументыСвязанные.Добавить();
    Нов.ДокументСвязанный = Выборка.Ссылка;
КонецЕсли;

Приемник.Комментарий = Приемник.Комментарий + ?(ЗначениеЗаполнено(Приемник.Комментарий), Символы.ПС, "") + ТекстКомментария;
Если Приемник.ЭтоПовторныйДокумент = Истина Тогда
	Если Приемник.НеЗагружатьДокумент = Истина Тогда
     	Приемник.Записать();
	КонецЕсли;
ИначеЕсли ПометитьНаУдаление = Истина Тогда
    // Удаляем.
    Приемник.ПометкаУдаления = Истина;
Иначе    
    // Проводим документ.
    Приемник.Проведен = Истина;
КонецЕсли;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Уведомление об отгрузке (DESADV)</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Уведомление об отгрузке (DESADV)</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">ЭТРН</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">4</id>
			</item>
		</Value>
	</row>
</ValueTree>